<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.amazonaws</groupId>
    <artifactId>dynamodb-replication-coordinator</artifactId>
    <packaging>jar</packaging>
    <version>1.0.1</version>
    
    <name>DynamoDB Replication Coordinator</name>
    <description>Amazon DynamoDB Replication Coordinator for Cross Region Replication library</description>
    <url>https://github.com/awslabs/dynamodb-cross-region-library</url>

    <properties>
        <dynamodb-connectors.version>[1.0.0, 2.0.0)</dynamodb-connectors.version>
        <aws.dynamodblocal.version>1.10.5.1</aws.dynamodblocal.version>
        <aws.java.sdk.version>[1.10.5.1, 2.0.0)</aws.java.sdk.version>
        <easymock.version>3.2</easymock.version>
        <junit.version>4.12</junit.version>
        <lombok.version>1.16.4</lombok.version>
        <powermock.version>1.6.2</powermock.version>        
 
        <maven.assembly.version>2.5.3</maven.assembly.version>
        <maven.compiler.version>3.3</maven.compiler.version>
        <maven.resources.version>2.7</maven.resources.version>
        <maven.surefire.version>2.18.1</maven.surefire.version>
        <maven.dependency.version>2.2</maven.dependency.version>
        <exec.maven.plugin.version>1.2</exec.maven.plugin.version>
        <maven.shade.version>2.4.1</maven.shade.version>
        <java.jdk.version>1.7</java.jdk.version>

        <sqlite4java.version>1.0.392</sqlite4java.version>
    </properties>

    <licenses>
        <license>
            <name>Amazon Software License</name>
            <url>http://aws.amazon.com/asl/</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <version>${easymock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-easymock</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- DynamoDBConnectors -->
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>dynamodb-connectors</artifactId>
            <version>${dynamodb-connectors.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- DynamoDB Local -->
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>DynamoDBLocal</artifactId>
            <version>${aws.dynamodblocal.version}</version>
        </dependency>

        <!-- DynamoDB SDK -->
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-dynamodb</artifactId>
            <version>${aws.java.sdk.version}</version>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>dynamodb-local</id>
            <name>DynamoDB Local Release Repository</name>
            <url>http://dynamodb-local.s3-website-us-west-2.amazonaws.com/release</url>
        </repository>
    </repositories>

    <developers>
        <developer>
            <name>Ben Schwartz</name>
            <email>schwar@amazon.com</email>
        </developer>
        <developer>
            <name>Daniela Miao</name>
            <email>dym@amazon.com</email>
        </developer>
    </developers>

    <contributors>
        <contributor>
            <name>Alexander Patrikalakis</name>
            <email>alexp@amazon.com</email>
            <url>https://www.linkedin.com/in/amcpatrix/en</url>
        </contributor>
    </contributors>

    <inceptionYear>2015</inceptionYear>

    <build>
        <plugins>
            <plugin>
                <!-- use shade plugin to produce one fat jar as target -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${maven.shade.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <!-- do not create a separate pom.xml file with reduced dependencies -->
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <filters>
                                <!-- required to make a valid signature during main class execution-->
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <artifactSet>
                                <excludes>
                                    <!-- exclude the sqlite4java static libraries because they cannot be unpacked -->
                                    <exclude>com.almworks.sqlite4java:*</exclude>
                                </excludes>
                            </artifactSet>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.amazonaws.services.dynamodbv2.replication.DynamoDBReplicationCoordinator</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.jdk.version}</source>
                    <target>${java.jdk.version}</target>
                </configuration>
                <version>${maven.compiler.version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.version}</version>
                <configuration>
                    <includes>
                        <include>**/*Tests.java</include>
                    </includes>
                    <systemPropertyVariables>
                        <log4j.configuration>file:${project.build.testOutputDirectory}/unitTestsLog4j.properties</log4j.configuration>
                        <sqlite4java.library.path>${basedir}/target/dependencies</sqlite4java.library.path>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven.resources.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven.dependency.version}</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/dependencies</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>
